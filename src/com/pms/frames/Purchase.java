/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pms.frames;

import com.pms.daoimpl.CommisionDAOImpl;
import com.pms.daoimpl.CompanyDAOImpl;
import com.pms.daoimpl.DealerDaoImpl;
import com.pms.daoimpl.ProductDAOImpl;
import com.pms.daoimpl.PurchaseDAOImpl;
import com.pms.daoimpl.PurchaseDetailsDaoImpl;
import com.pms.daoimpl.UnitDAOImpl;
import com.pms.models.CommisionTypeModel;
import com.pms.models.CompanyModel;
import com.pms.models.DealerModel;
import com.pms.models.ProductModel;
import com.pms.models.PurchaseDetailsModel;
import com.pms.models.PurchaseModel;
import com.pms.models.PurchaseReciept;
import com.pms.models.RecieptModel;
import com.pms.models.UnitModel;
import java.awt.Dimension;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import sun.util.calendar.CalendarUtils;

/**
 *
 * @author Asif Ali
 */
public class Purchase extends javax.swing.JFrame {
  
    
   
   static int orderNo = new PurchaseDAOImpl().getPurchaseNo();
    
 
  private static final AtomicInteger orderno = new AtomicInteger(orderNo);
  
  private final AtomicInteger counter = new AtomicInteger(0);
DefaultTableModel defaultTableModel2 = new DefaultTableModel();
   
   private List<PurchaseReciept> recieptList = null;
    int a = -1;
 private int serialNo = 0;
double sum =0;
double dis = 0;
double discountValue = 0.0;
double paidAmount = 0.0;
double comissionValue = 0.0;
       private int rowIndex; 
/**
     * Creates new form Purchase
     */
    public Purchase() {
        initComponents();
        fillProductTable();
        fillCompanyComboBox();
        fillStockTable();
        this.setLocationRelativeTo(null);
        fillCommissionComboBox();
        recieptList = new LinkedList();
        jquantity.setText("1");
        
    }
private int getRowIndex(){
        return rowIndex;
    }
    
    private void setRowIndex(int rowIndex){
        this.rowIndex = rowIndex;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        DealerTabel = new javax.swing.JTable();
        jdielerfield = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        ChangeQuantity = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jquantityField = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jProductField = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jdealorfield = new javax.swing.JTextField();
        jcontactfield = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jcompanycombo = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jsearchproduct = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jquantity = new javax.swing.JTextField();
        unitcombobox = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ProductTable = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jdiscountfield = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jcommentfield = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jamountfield = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jcommisiontype = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jcomissionfield = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        remaining = new javax.swing.JLabel();
        grandtotal = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        RecieptTable = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();

        jFrame1.setBounds(new java.awt.Rectangle(0, 0, 600, 600));
        jFrame1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DealerTabel.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        DealerTabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        DealerTabel.setRowHeight(20);
        DealerTabel.setSelectionBackground(new java.awt.Color(140, 198, 40));
        DealerTabel.setSelectionForeground(new java.awt.Color(0, 0, 0));
        DealerTabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                DealerTabelMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(DealerTabel);

        jPanel5.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 98, 577, 330));

        jdielerfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdielerfieldKeyReleased(evt);
            }
        });
        jPanel5.add(jdielerfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(198, 39, 218, 28));

        jLabel16.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel16.setText("Dealor");
        jPanel5.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(123, 35, 65, 28));

        jFrame1.getContentPane().add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 51, 597, 440));

        jPanel6.setBackground(new java.awt.Color(0, 0, 0));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(140, 198, 40));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Dealer Frame");
        jPanel6.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(199, 11, 170, 27));

        jLabel28.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("X");
        jLabel28.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel28.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel28MouseClicked(evt);
            }
        });
        jPanel6.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(555, 11, 32, -1));

        jFrame1.getContentPane().add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 597, 57));

        ChangeQuantity.setBounds(new java.awt.Rectangle(0, 0, 350, 250));
        ChangeQuantity.setUndecorated(true);
        ChangeQuantity.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jLabel19.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(140, 198, 40));
        jLabel19.setText("Change Quantity");

        jLabel26.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("X");
        jLabel26.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel26.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel26MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addContainerGap())
        );

        ChangeQuantity.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 420, 50));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jquantityField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jquantityFieldKeyPressed(evt);
            }
        });
        jPanel4.add(jquantityField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 80, 30));

        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel22.setText("Quantity");
        jPanel4.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, -1, -1));

        jLabel20.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel20.setText("Product Name");
        jPanel4.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));
        jPanel4.add(jProductField, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 50, 150, 30));

        jLabel27.setBackground(new java.awt.Color(140, 198, 40));
        jLabel27.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 255, 255));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Edit");
        jLabel27.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel27.setOpaque(true);
        jLabel27.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel27MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 100, 30));

        ChangeQuantity.getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 410, 200));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(140, 198, 40));
        jLabel1.setText("Purchase");

        jLabel21.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("X");
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(516, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(506, 506, 506)
                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel21)
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1210, 70));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel14.setText("Dealor");
        jPanel1.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 60, 30));

        jdealorfield.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jdealorfieldMouseClicked(evt);
            }
        });
        jPanel1.add(jdealorfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, 210, 30));
        jPanel1.add(jcontactfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 120, 210, 30));

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel15.setText("Contact");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 70, 30));

        jLabel9.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel9.setText("Company");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 180, -1, 30));

        jPanel1.add(jcompanycombo, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 180, 210, 30));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setText("Product");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, 70, 30));

        jsearchproduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jsearchproductActionPerformed(evt);
            }
        });
        jsearchproduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jsearchproductKeyReleased(evt);
            }
        });
        jPanel1.add(jsearchproduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 280, 210, 30));

        jLabel6.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel6.setText("Quantity");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 330, 70, 30));
        jPanel1.add(jquantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 330, 70, 30));

        jPanel1.add(unitcombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 230, 210, 30));

        jLabel18.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel18.setText("Unit");
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 40, 30));

        jLabel23.setBackground(new java.awt.Color(140, 198, 40));
        jLabel23.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Add Record");
        jLabel23.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel23.setOpaque(true);
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 370, 130, 40));

        ProductTable.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        ProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        ProductTable.setRowHeight(20);
        ProductTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        ProductTable.setSelectionForeground(new java.awt.Color(140, 198, 40));
        ProductTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProductTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ProductTable);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 435, 550, 250));

        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel11.setText("Discount");
        jPanel1.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 60, 70, 30));

        jdiscountfield.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jdiscountfieldMouseClicked(evt);
            }
        });
        jdiscountfield.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jdiscountfieldFocusGained(evt);
            }
        });
        jdiscountfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jdiscountfieldKeyReleased(evt);
            }
        });
        jPanel1.add(jdiscountfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 60, 100, 30));

        jLabel12.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel12.setText("%");
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 60, 40, 30));

        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel5.setText("Comment");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 60, -1, -1));

        jcommentfield.setColumns(20);
        jcommentfield.setRows(5);
        jScrollPane1.setViewportView(jcommentfield);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(990, 60, 190, -1));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setText("Amount Paid");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 120, 90, 30));

        jamountfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jamountfieldKeyReleased(evt);
            }
        });
        jPanel1.add(jamountfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 120, 100, 30));

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setText("Comission Type");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 180, -1, 30));

        jcommisiontype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "select" }));
        jPanel1.add(jcommisiontype, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 180, 200, 30));

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setText("Comission");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 240, 80, 30));

        jcomissionfield.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcomissionfieldMouseClicked(evt);
            }
        });
        jcomissionfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jcomissionfieldKeyReleased(evt);
            }
        });
        jPanel1.add(jcomissionfield, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 240, 110, 30));

        jLabel10.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel10.setText("%");
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 240, 30, 30));

        jLabel13.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel13.setText("Grand Total");
        jPanel1.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 310, -1, -1));

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel7.setText("Remaining");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 310, -1, -1));

        remaining.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        remaining.setText("0.00");
        jPanel1.add(remaining, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 310, -1, -1));

        grandtotal.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jPanel1.add(grandtotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 310, 110, 30));

        RecieptTable.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        RecieptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        RecieptTable.setRowHeight(20);
        RecieptTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        RecieptTable.setSelectionForeground(new java.awt.Color(140, 198, 40));
        RecieptTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RecieptTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(RecieptTable);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 430, 600, 250));

        jLabel24.setBackground(new java.awt.Color(140, 198, 40));
        jLabel24.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("Remove");
        jLabel24.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel24.setOpaque(true);
        jLabel24.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel24MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 370, 130, 40));

        jLabel25.setBackground(new java.awt.Color(140, 198, 40));
        jLabel25.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel25.setText("Add Stock");
        jLabel25.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel25.setOpaque(true);
        jLabel25.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel25MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 370, 150, 40));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 1210, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jsearchproductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jsearchproductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jsearchproductActionPerformed

    private void jdiscountfieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdiscountfieldMouseClicked

    }//GEN-LAST:event_jdiscountfieldMouseClicked

    private void jdiscountfieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jdiscountfieldFocusGained
     

    }//GEN-LAST:event_jdiscountfieldFocusGained

    private void jcomissionfieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcomissionfieldMouseClicked


    }//GEN-LAST:event_jcomissionfieldMouseClicked

    private void jdealorfieldMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdealorfieldMouseClicked

        jFrame1.setVisible(true);
        jFrame1.setLocationRelativeTo(null);
 fillDealerTable();
    }//GEN-LAST:event_jdealorfieldMouseClicked

    private void DealerTabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_DealerTabelMouseClicked
       String name = DealerTabel.getValueAt(DealerTabel.getSelectedRow(), 0).toString();
       String contact = DealerTabel.getValueAt(DealerTabel.getSelectedRow(), 1).toString();
jdealorfield.setText(name);
jcontactfield.setText(contact);
jdealorfield.setEditable(false);
jcontactfield.setEditable(false);
jFrame1.setVisible(false);
       
    }//GEN-LAST:event_DealerTabelMouseClicked

    private void jdiscountfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdiscountfieldKeyReleased
if(jdiscountfield.getText().equals("")){
discountValue = 0;

}else{
    discountValue = Double.parseDouble(jdiscountfield.getText());

}
fillremainingAmount();
    }//GEN-LAST:event_jdiscountfieldKeyReleased

    private void jcomissionfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jcomissionfieldKeyReleased
  if(jcomissionfield.getText().equals("")){
  comissionValue = 0;
  
  }else{
      comissionValue = Double.parseDouble(jcomissionfield.getText());
  
  }
  fillremainingAmount();
    }//GEN-LAST:event_jcomissionfieldKeyReleased

    private void jamountfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jamountfieldKeyReleased
        if(jamountfield.getText().equals("")){
        paidAmount = 0;
 
        }
        else{
           paidAmount = Double.parseDouble(jamountfield.getText());
        System.out.println("hello23");
        }
        fillremainingAmount();
    }//GEN-LAST:event_jamountfieldKeyReleased

    private void jquantityFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jquantityFieldKeyPressed

    }//GEN-LAST:event_jquantityFieldKeyPressed

    private void RecieptTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RecieptTableMouseClicked
    if(evt.getClickCount()==2){       
       ChangeQuantity.setVisible(true);
       ChangeQuantity.setLocationRelativeTo(RecieptTable);
       ChangeQuantity.setSize(new Dimension(407,250));
       jProductField.setText(RecieptTable.getValueAt(RecieptTable.getSelectedRow(), 1).toString());
       jProductField.setEnabled(false);
         
}
    }//GEN-LAST:event_RecieptTableMouseClicked

    private void jsearchproductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jsearchproductKeyReleased
        String productName = jsearchproduct.getText();
        TableRowSorter tableRowSorter = new TableRowSorter(ProductTable.getModel());
       ProductTable.setRowSorter(tableRowSorter);
       tableRowSorter.setRowFilter(RowFilter.regexFilter("(?i)"+productName));
    }//GEN-LAST:event_jsearchproductKeyReleased

    private void jdielerfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdielerfieldKeyReleased
       String dealerName = jdielerfield.getText();
       TableRowSorter tableRowSorter = new TableRowSorter(DealerTabel.getModel());
       DealerTabel.setRowSorter(tableRowSorter);
       tableRowSorter.setRowFilter(RowFilter.regexFilter("(?i)"+dealerName));
               
    }//GEN-LAST:event_jdielerfieldKeyReleased

    private void ProductTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProductTableMouseClicked
        int row = ProductTable.getSelectedRow();
        if(row > -1){ 
         row = ProductTable.convertRowIndexToModel(row);
         setRowIndex(row);
        String product = (String)ProductTable.getModel().getValueAt(row, 1);
        jsearchproduct.setText(product);
        RecieptTable.clearSelection();  
        } 
      
    }//GEN-LAST:event_ProductTableMouseClicked

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        /*if(jdealorfield.getText().equals("") || jcontactfield.getText().equals("") || jcompanycombo.getSelectedItem().equals("") || unitcombobox.getSelectedItem().equals("") || jsearchproduct.getText().equals("") || jquantity.getText().equals(""))
        {
            JOptionPane.showMessageDialog(this,"Please fill all fields to add record.");
        }else{*/
             int row = getRowIndex();
             int quantity = Integer.parseInt(jquantity.getText());
             int productId = Integer.parseInt(ProductTable.getValueAt(row, 0).toString()); 
             if(checkRecieptList(productId)){
                JOptionPane.showMessageDialog(this, "This Item is already added");
              }else{
                String productName = ProductTable.getValueAt(row, 1).toString();
                String unit = ProductTable.getValueAt(row, 3).toString();
                double price = Double.parseDouble(ProductTable.getValueAt(row, 2).toString());
                PurchaseReciept purchaseReciept = new PurchaseReciept();
                purchaseReciept.setId(++serialNo);
                purchaseReciept.setQuantity(quantity);
                purchaseReciept.setProductId(productId);
                purchaseReciept.setUnit(unit);
                purchaseReciept.setProductName(productName);
                purchaseReciept.setPrice(price);

                recieptList.add(purchaseReciept);
                fillDataIntoRecieptTable();
                ProductTable.setValueAt((int)ProductTable.getValueAt(row, 4)+quantity, row, 4); 
           }
        //}
    }//GEN-LAST:event_jLabel23MouseClicked

    private void jLabel25MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel25MouseClicked
        int purchaseNo = ++orderNo;
        addStock(purchaseNo);
        RecieptTable.removeAll();        
    }//GEN-LAST:event_jLabel25MouseClicked

    private void jLabel24MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel24MouseClicked
        updateQuantityStock();
        removeRecieptTableRow();        
    }//GEN-LAST:event_jLabel24MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel26MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel26MouseClicked
        ChangeQuantity.dispose();
    }//GEN-LAST:event_jLabel26MouseClicked

    private void jLabel27MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel27MouseClicked
        /*       Integer quantity = Integer.parseInt(jquantityField.getText());
       double price = Double.parseDouble(RecieptTable.getValueAt(RecieptTable.getSelectedRow(), 2).toString());
       Integer Productquantity =Integer.parseInt( ProductTable.getValueAt(a, 3).toString());
       RecieptTable.setValueAt(quantity, RecieptTable.getSelectedRow(), 4);
       ProductTable.setValueAt(Productquantity+quantity,a ,3 );
       RecieptTable.setValueAt(quantity*price, RecieptTable.getSelectedRow(), 5);
       ChangeQuantity.setVisible(false);
       sum = 0;
       for(int i = 0 ; i< RecieptTable.getRowCount();i++){
       sum = sum + Double.parseDouble(RecieptTable.getValueAt(i, 5).toString());
       }
      this.grandtotal.setText(String.valueOf(sum));
*/
    updateQuantity();
    fillremainingAmount();
    }//GEN-LAST:event_jLabel27MouseClicked

    private void jLabel28MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel28MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel28MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Purchase.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Purchase().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog ChangeQuantity;
    private javax.swing.JTable DealerTabel;
    private javax.swing.JTable ProductTable;
    private javax.swing.JTable RecieptTable;
    private javax.swing.JLabel grandtotal;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField jProductField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jamountfield;
    private javax.swing.JTextField jcomissionfield;
    private javax.swing.JTextArea jcommentfield;
    private javax.swing.JComboBox<String> jcommisiontype;
    private javax.swing.JComboBox<String> jcompanycombo;
    private javax.swing.JTextField jcontactfield;
    private javax.swing.JTextField jdealorfield;
    private javax.swing.JTextField jdielerfield;
    private javax.swing.JTextField jdiscountfield;
    private javax.swing.JTextField jquantity;
    private javax.swing.JTextField jquantityField;
    private javax.swing.JTextField jsearchproduct;
    private javax.swing.JLabel remaining;
    private javax.swing.JComboBox<String> unitcombobox;
    // End of variables declaration//GEN-END:variables
public void fillProductTable(){
    ProductDAOImpl product = new ProductDAOImpl();
     DefaultTableModel defaultTableModel = new DefaultTableModel(){
         @Override
         public boolean isCellEditable(int row, int column) {
             return false; //To change body of generated methods, choose Tools | Templates.
         }    
     };
    defaultTableModel.addColumn("ProductId");
    defaultTableModel.addColumn("Name");
    defaultTableModel.addColumn("Price");
    defaultTableModel.addColumn("Unit");
    defaultTableModel.addColumn("Quantity");
    
    System.out.println("hello");
    List<ProductModel> products = product.getAllProduct();
  
    for(ProductModel list:products){
    Object items[] = {list.getProductId(),list.getProductName(),list.getPrice(),list.getUnitModel().getUnitName(),list.getQuantity()};
    defaultTableModel.addRow(items);
  
    }
ProductTable.setModel(defaultTableModel);
}
public void fillStockTable(){
  defaultTableModel2 = new DefaultTableModel(){
         @Override
         public boolean isCellEditable(int row, int column) {
             return false; //To change body of generated methods, choose Tools | Templates.
         }    
     };
defaultTableModel2.addColumn("S_No");
defaultTableModel2.addColumn("Name");
defaultTableModel2.addColumn("Price");
defaultTableModel2.addColumn("Unit");
defaultTableModel2.addColumn("Qunaity");
defaultTableModel2.addColumn("Total");

RecieptTable.setModel(defaultTableModel2);
}
public void fillCompanyComboBox(){
    CompanyDAOImpl company = new CompanyDAOImpl();
List<CompanyModel> companies = company.getAllCompany();
for(CompanyModel list:companies){
jcompanycombo.addItem(list.getName());
}
}
public void fillDealerTable(){
    System.out.println("hello");
    DefaultTableModel defaultTableModel = new DefaultTableModel(){
         @Override
         public boolean isCellEditable(int row, int column) {
             return false; //To change body of generated methods, choose Tools | Templates.
         }    
     };
    defaultTableModel.addColumn("Name");
    defaultTableModel.addColumn("Contact");
    DealerDaoImpl dealer = new DealerDaoImpl();
    List<DealerModel> list = dealer.getDealerDetails();
    
    for(DealerModel dealers:list){
        System.out.println(dealers.getDealerName());
    Object items[] = {dealers.getDealerName(),dealers.getContact()};
     defaultTableModel.addRow(items);
    }
DealerTabel.setModel(defaultTableModel);
}

public void fillCommissionComboBox(){
CommisionDAOImpl commission = new CommisionDAOImpl();
List<CommisionTypeModel> comissonModel = commission.getAllCommisionType();
for(CommisionTypeModel list:comissonModel){
    jcommisiontype.addItem(list.getCommisionType());
}

}

public void addStock(Integer purchaseNo){
     
PurchaseModel purchaseModel = new PurchaseModel();
   DealerModel dealerModel = new DealerModel();
   dealerModel.setDealerName(jdealorfield.getText());
   purchaseModel.setDealorModel(dealerModel);
   purchaseModel.setAmountPaid(Integer.parseInt(jamountfield.getText()));
   purchaseModel.setCommisson(Integer.parseInt(jcomissionfield.getText()));
   CommisionTypeModel commissonModel = new CommisionTypeModel();
   commissonModel.setCommisionType(jcommisiontype.getSelectedItem().toString());
  purchaseModel.setComissonModel(commissonModel);
    Timestamp timestamp= new Timestamp(System.currentTimeMillis());
    purchaseModel.setCreatedDate(timestamp);
    purchaseModel.setModifiedDate(timestamp);
  purchaseModel.setCreatedBy(LoginFrame.userModel);
    purchaseModel.setModifiedBy(LoginFrame.userModel);
    purchaseModel.setActive(true);
    purchaseModel.setPurchaseDate(timestamp);
    CompanyModel companyModel = new CompanyModel();
    companyModel.setName(jcompanycombo.getSelectedItem().toString());
    purchaseModel.setCompanyModel(companyModel);
    purchaseModel.setComment(jcommentfield.getText());
    purchaseModel.setDiscount(Double.parseDouble(jdiscountfield.getText()));
    purchaseModel.setTotal(Double.parseDouble(grandtotal.getText()));
   
    purchaseModel.setPurchaseNumber(purchaseNo);
    PurchaseDAOImpl  purchaseDAOImpl = new PurchaseDAOImpl();
   int row = purchaseDAOImpl.insertPurchaseData(purchaseModel);
   if(row>0){
       JOptionPane.showMessageDialog(rootPane, "Purchase Placed Successfully");
   }
   else{
       JOptionPane.showMessageDialog(rootPane, "inserted UnSuccessfully");
   }
    
    insertPurchaseDetailsData(purchaseNo, timestamp);
   updateProductQuantity();
}

public void insertPurchaseDetailsData(Integer purchaseNo, Timestamp timestamp){
PurchaseDetailsModel purchaseDetailsModel = new PurchaseDetailsModel();
    for(int i = 0 ;i<RecieptTable.getRowCount();i++){
        try{
            Integer purchase_id = new PurchaseDAOImpl().getPurchaseId(purchaseNo);
            System.out.println(purchase_id);
String productName = RecieptTable.getValueAt(i, 1).toString();
ProductDAOImpl productDaoImpl = new ProductDAOImpl();
Integer productId = productDaoImpl.getProductId(productName);
Integer quantity = Integer.parseInt(RecieptTable.getValueAt(i,4).toString());
String unitName = RecieptTable.getValueAt(i, 3).toString();
Integer unitId = new UnitDAOImpl().getUnitId(unitName);
Double rate = Double.parseDouble(RecieptTable.getValueAt(i,2).toString());
ProductModel productModel = new ProductModel();
productModel.setProductId(productId);
purchaseDetailsModel.setProductModel(productModel);
PurchaseDAOImpl purchaseDAOImpl = new PurchaseDAOImpl();
        PurchaseModel purchaseModel = new PurchaseModel();
        purchaseModel.setPurchaseId(purchaseDAOImpl.getPurchaseId(purchaseNo));
purchaseDetailsModel.setPurchaseModel(purchaseModel);
purchaseDetailsModel.setQuantity(quantity);
purchaseDetailsModel.setRate(rate);
UnitModel unitModel = new UnitModel();
unitModel.setUnitId(unitId);
purchaseDetailsModel.setUnitModel(unitModel);
purchaseDetailsModel.setCreatedBy(LoginFrame.userModel);
purchaseDetailsModel.setCreatedDate(timestamp);
purchaseDetailsModel.setModifiedBy(LoginFrame.userModel);
purchaseDetailsModel.setModifiedDate(timestamp);
purchaseDetailsModel.setActive(true);
PurchaseDetailsDaoImpl purchaseDetailsDaoImpl = new PurchaseDetailsDaoImpl();
int j = purchaseDetailsDaoImpl.insertPurchaseDetailsInfo(purchaseDetailsModel);
  
     }catch(Exception e){
          e.printStackTrace();
            }

}

}

    private void fillremainingAmount() {
    double totalAmount = sum;
        double remainingBalance = totalAmount - (totalAmount * (discountValue/100.0));
        remainingBalance = remainingBalance - paidAmount;
        remainingBalance = (remainingBalance * (comissionValue/100.0)) + remainingBalance;
        
        remaining.setText((new DecimalFormat("##.##").format(remainingBalance)));
    }
     

    private void updateProductQuantity() {
     for(int i=0;i<ProductTable.getRowCount();i++){
     
         int ProductID =Integer.parseInt( ProductTable.getValueAt(i, 0).toString());
         int Quantity = Integer.parseInt(ProductTable.getValueAt(i, 4).toString());
         ProductModel productModel = new ProductModel();
         productModel.setProductId(ProductID);
         productModel.setQuantity(Quantity);
         ProductDAOImpl productDAOImpl = new ProductDAOImpl();
         int row = productDAOImpl.updateProductQuantity(productModel);
     }
        fillProductTable();
    }

public void fillDataIntoRecieptTable(){
        String[] colNames = {"Sr.No","Name","Price","Unit","Quantity","Total"};
        
        DefaultTableModel dtm = null;
        
        dtm = new DefaultTableModel(colNames,0){
            @Override
            public boolean isCellEditable(int row, int column) {
               return false;
            }
        };
        
        for(PurchaseReciept reciept:recieptList){
            double totalPrice = reciept.getPrice()*reciept.getQuantity();
            totalPrice = Double.parseDouble(new DecimalFormat("##.##").format(totalPrice));
            Object[] row = {reciept.getId(),reciept.getProductName(),reciept.getPrice(),reciept.getUnit(),reciept.getQuantity(),totalPrice};
            
            dtm.addRow(row);
        }
        
       
        RecieptTable.setModel(dtm);
         sum = 0;
       for(int i = 0 ; i< RecieptTable.getRowCount();i++){
       sum = sum + Double.parseDouble(RecieptTable.getValueAt(i, 5).toString());
       }
      this.grandtotal.setText(String.valueOf(sum));
    
    }
    private void updateQuantity(){
        int quan = -1;
        PurchaseReciept reciept = recieptList.get(RecieptTable.getSelectedRow());
        if(!jquantityField.getText().equals("")){
            
            for(int i =0; i<ProductTable.getRowCount(); i++){
                if(jProductField.getText().equals(ProductTable.getValueAt(i, 1))){
                   quan = (int) ProductTable.getValueAt(i, 4);
                   break;
                }  
            }

            int quantity = Integer.parseInt(jquantityField.getText());
           
            int totalQuantity = quan + quantity;
            
            
            reciept.setQuantity(quantity);
            
         //   fillProductTable();
            
            for(int i =0; i<ProductTable.getRowCount(); i++){
                if(reciept.getProductId() == (int)ProductTable.getValueAt(i, 0)){
                   ProductTable.setValueAt(totalQuantity, i, 4);
                   break;
                }  
            }
            
            
            
            fillDataIntoRecieptTable();
            ChangeQuantity.dispose();
            }  
        
        }
    private void updateQuantityStock(){
        int quan = (int) RecieptTable.getValueAt(RecieptTable.getSelectedRow(), 4);
        PurchaseReciept reciept = recieptList.get(RecieptTable.getSelectedRow());
        
        for(int i=0; i<ProductTable.getRowCount(); i++){
            if((int)ProductTable.getValueAt(i, 0) == reciept.getProductId()){
               ProductTable.setValueAt((int)ProductTable.getValueAt(i, 4)-quan, i, 4);
               break;
            }
        }
        
        
    }
        private void setSerialNo(){
        
        int count = 0;
        for(PurchaseReciept reciept : recieptList){
            reciept.setId(++count);
        }
        
        --serialNo;
        
        fillDataIntoRecieptTable();
    }
    
    private void removeRecieptTableRow(){
        
        DefaultTableModel model = (DefaultTableModel) RecieptTable.getModel();
        recieptList.remove(RecieptTable.getSelectedRow());
        model.removeRow(RecieptTable.getSelectedRow());   
        setSerialNo();
    }
     private boolean checkRecieptList(int productId){
        
        for(int i=0; i<recieptList.size(); i++){
            if(productId == recieptList.get(i).getProductId()){
                return true;
            }
        }
        return false;
    }
    }
