/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pms.frames;

import com.pms.daoimpl.CommisionDAOImpl;
import com.pms.daoimpl.CustomerDAOImpl;
import com.pms.daoimpl.OrderDAOImpl;
import com.pms.daoimpl.OrderDetailDAOImpl;
import com.pms.daoimpl.ProductDAOImpl;
import com.pms.models.CommisionTypeModel;
import com.pms.models.CustomerModel;
import com.pms.models.OrderDetailsModel;
import com.pms.models.OrderModel;
import com.pms.models.UnitModel;
import com.pms.models.ProductModel;
import com.pms.models.RecieptModel;
import java.awt.event.KeyEvent;
import java.sql.Timestamp;
import java.util.Date;
import java.text.DecimalFormat;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Rehan Ali Azeemi
 */
public class OrderFrame extends javax.swing.JFrame {
private int serialNo = 0;
private List<RecieptModel> recieptList = null;
private int customer_id = -1;
private double amountPaidValue = 0.0;
private double comissionValue = 0.0;
private double discountValue = 0.0;
private int rowIndex;
    /**
     * Creates new form OrderFrame
     */
    public OrderFrame() {
        initComponents();
        fillDataIntoProductTable();
        recieptList = new LinkedList();
        recieptProduct.setEditable(false);
        recieptPrice.setEditable(false);
        fillDataIntoTable();
        fillCommisionTypeCombo();
        this.setLocationRelativeTo(null);
        customerFrame.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        comment.setText("No Comment");
        
    }
    
    private int getRowIndex(){
        return rowIndex;
    }
    
    private void setRowIndex(int rowIndex){
        this.rowIndex = rowIndex;
    }
    
    private void calculateRemianingBalance(){
        double totalAmount = setGrandTotal();
        double remainingBalance = totalAmount - (totalAmount * (discountValue/100.0));
        remainingBalance = remainingBalance - amountPaidValue;
        remainingBalance = (remainingBalance * (comissionValue/100.0)) + remainingBalance;
        
        remaining.setText((new DecimalFormat("##.##").format(remainingBalance)));

    }
    
    private void fillDataIntoProductTable(){
        ProductDAOImpl obj = new ProductDAOImpl();
        List<ProductModel> productList = obj.getAllProduct();
        
        String[] colNames = {"ID","Product","Price","Unit","Quantity"};
        DefaultTableModel dtm = new DefaultTableModel(colNames,0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
            };
        
        for(ProductModel product : productList){
            Object row[] = {product.getProductId(),product.getProductName(),product.getPrice(),product.getUnitModel().getUnitName(),product.getQuantity()};
           
           dtm.addRow(row);
        }  
    
        productTable.setModel(dtm);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recieptRowSelect = new javax.swing.JDialog();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        recieptPrice = new javax.swing.JTextField();
        recieptQuantity = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        recieptProduct = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        customerFrame = new javax.swing.JFrame();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        back = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerTable = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        searchProduct = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        productQuantity = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        productTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        recieptTable = new javax.swing.JTable();
        total = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        personal = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        contactField = new javax.swing.JFormattedTextField();
        jLabel6 = new javax.swing.JLabel();
        commisionTypeCombo = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        discount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        commision = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        amountPaid = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        comment = new javax.swing.JTextArea();
        jLabel20 = new javax.swing.JLabel();
        remaining = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();

        recieptRowSelect.setBounds(new java.awt.Rectangle(0, 0, 402, 325));
        recieptRowSelect.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton5.setForeground(new java.awt.Color(204, 204, 204));
        jButton5.setText("Confirm");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        recieptRowSelect.getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, -1, -1));

        jButton6.setBackground(new java.awt.Color(0, 0, 0));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton6.setForeground(new java.awt.Color(204, 204, 204));
        jButton6.setText("Cancel");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        recieptRowSelect.getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 240, 80, -1));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Update Section", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N
        jPanel4.setOpaque(false);

        recieptPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                recieptPriceKeyReleased(evt);
            }
        });

        recieptQuantity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                recieptQuantityKeyReleased(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel11.setText("Price");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel10.setText("Product Name");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel12.setText("Quantity");

        recieptProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recieptProductActionPerformed(evt);
            }
        });
        recieptProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                recieptProductKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(recieptQuantity, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                    .addComponent(recieptPrice)
                    .addComponent(recieptProduct))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(recieptProduct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(recieptPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(recieptQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        recieptRowSelect.getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setText("Order Changing");
        recieptRowSelect.getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 20, -1, -1));
        recieptRowSelect.getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 210, -1, -1));

        jLabel16.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jLabel16KeyReleased(evt);
            }
        });
        recieptRowSelect.getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 300));

        customerFrame.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        customerFrame.setBounds(new java.awt.Rectangle(0, 0, 530, 450));
        customerFrame.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                customerFrameformWindowClosed(evt);
            }
            public void windowDeactivated(java.awt.event.WindowEvent evt) {
                customerFrameformWindowDeactivated(evt);
            }
        });
        customerFrame.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        jLabel7.setText("Customer Panel");
        customerFrame.getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 40, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Search");
        customerFrame.getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        search.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });
        customerFrame.getContentPane().add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(97, 80, 210, 30));

        back.setBackground(new java.awt.Color(0, 0, 0));
        back.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        back.setForeground(new java.awt.Color(204, 204, 204));
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        customerFrame.getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        customerTable.setBackground(new java.awt.Color(204, 204, 204));
        customerTable.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        customerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        customerTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        customerTable.setSelectionForeground(new java.awt.Color(204, 204, 204));
        customerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                customerTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(customerTable);

        customerFrame.getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 130, 460, 250));
        customerFrame.getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 530, 450));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        searchProduct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchProductKeyReleased(evt);
            }
        });

        jLabel1.setText("Search Product");

        jLabel2.setText("Quantity");

        productQuantity.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        productTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                productTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(productTable);

        jButton1.setText("Add Product");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        recieptTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        recieptTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recieptTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(recieptTable);

        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Customer Type");

        personal.setText("Personal");
        personal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                personalActionPerformed(evt);
            }
        });

        jLabel4.setText("Name");

        jLabel5.setText("Contact");

        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });

        try {
            contactField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+92###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        contactField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactFieldActionPerformed(evt);
            }
        });

        jLabel6.setText("Commision Type");

        commisionTypeCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Item" }));

        jLabel9.setText("Discount %");

        discount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discountActionPerformed(evt);
            }
        });
        discount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                discountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                discountKeyReleased(evt);
            }
        });

        jLabel17.setText("Commision %");

        commision.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                commisionKeyReleased(evt);
            }
        });

        jButton3.setText("Generate");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel18.setText("Amount Paid");

        amountPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountPaidActionPerformed(evt);
            }
        });
        amountPaid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountPaidKeyReleased(evt);
            }
        });

        jLabel19.setText("Comment");

        comment.setColumns(20);
        comment.setRows(5);
        jScrollPane4.setViewportView(comment);

        jLabel20.setText("Remaining");

        remaining.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        remaining.setText("0.00");

        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1))))
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(productQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(110, 110, 110)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(personal)
                            .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(commisionTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel9)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(amountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(commision, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(remaining, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 470, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(510, 510, 510)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(370, 370, 370)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addGap(17, 17, 17)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(23, 23, 23)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(searchProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(productQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(personal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(contactField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(commisionTypeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jLabel20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(discount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(amountPaid, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(commision, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(remaining)))))
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchProductKeyReleased
        String txt = searchProduct.getText().toString();
        TableRowSorter trs = new TableRowSorter(productTable.getModel());
        productTable.setRowSorter(trs);       
        trs.setRowFilter(RowFilter.regexFilter("(?i)"+txt));
   
    }//GEN-LAST:event_searchProductKeyReleased
    
    public void fillDataIntoRecieptTable(){
        String[] colNames = {"Sr.No","Name","Price","Quantity","Total"};
        
        DefaultTableModel dtm = null;
        
        dtm = new DefaultTableModel(colNames,0){
            @Override
            public boolean isCellEditable(int row, int column) {
               return false;
            }
        };
        
        for(RecieptModel reciept:recieptList){
            double totalPrice = reciept.getPrice()*reciept.getQuantity();
            totalPrice = Double.parseDouble(new DecimalFormat("##.##").format(totalPrice));
            Object[] row = {reciept.getId(),reciept.getProduct(),reciept.getPrice(),reciept.getQuantity(),totalPrice};
            
            dtm.addRow(row);
        }
        
        setGrandTotal();
        recieptTable.setModel(dtm);
        
    }
    
    private double setGrandTotal(){

        double sum = 0.0;
        
        for(RecieptModel reciept:recieptList){
            sum += reciept.getPrice() * reciept.getQuantity();
        }
        
        total.setText("Grand Total : "+(new DecimalFormat("##.##").format(sum)));
        
        return sum;
    }
    
   
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int quan =(int) productQuantity.getValue();
        int row = getRowIndex();
        
        if(row > -1){
            
           int productId = (int) productTable.getModel().getValueAt(row, 0); 
        if(checkRecieptList(productId)){
            JOptionPane.showMessageDialog(this, "This Item is already added");
        }else{
        
        if(quan <= (int) productTable.getModel().getValueAt(row, 4)){
            
            
       String name = (String) productTable.getModel().getValueAt(row, 1);
       double price = (double) productTable.getModel().getValueAt(row, 2);
       
       
       
        RecieptModel reciept = new RecieptModel();
        
        reciept.setId(++serialNo);
        reciept.setProduct(name);
        reciept.setProductId(productId);
        reciept.setPrice(price);
        reciept.setQuantity(quan);
        
        
        recieptList.add(reciept);
        
        
        
        fillDataIntoRecieptTable();
        
        productTable.getModel().setValueAt((int) productTable.getModel().getValueAt(row, 4)-quan,row, 4);
        }
        
        else{
            JOptionPane.showMessageDialog(productTable, "We have not much stock available");
        }
        }
        }
        else{
            JOptionPane.showMessageDialog(productTable, "Please Select the Product");
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private boolean checkRecieptList(int productId){
        
        for(int i=0; i<recieptList.size(); i++){
            if(productId == recieptList.get(i).getProductId()){
                return true;
            }
        }
        return false;
    }
    
    private void productTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productTableMouseClicked
        int row = productTable.getSelectedRow();
        
        if(row > -1){ 
         row = productTable.convertRowIndexToModel(row);
         setRowIndex(row);
        String product = (String)productTable.getModel().getValueAt(row, 1);
        searchProduct.setText(product);
        recieptTable.clearSelection();  
        } 
        
    }//GEN-LAST:event_productTableMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        updateQuantityStock();
        removeRecieptTableRow();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        updateQuantity();
        calculateRemianingBalance();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        recieptRowSelect.dispose();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void recieptPriceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recieptPriceKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            recieptRowSelect.dispose();
        }
    }//GEN-LAST:event_recieptPriceKeyReleased

    private void recieptQuantityKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recieptQuantityKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            updateQuantity();
        }
        else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            recieptRowSelect.dispose();
        }
    }//GEN-LAST:event_recieptQuantityKeyReleased

    private void recieptProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recieptProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_recieptProductActionPerformed

    private void recieptProductKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_recieptProductKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            recieptRowSelect.dispose();
        }
    }//GEN-LAST:event_recieptProductKeyReleased

    private void jLabel16KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jLabel16KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            updateQuantity();
        }
        else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            recieptRowSelect.dispose();
        }
    }//GEN-LAST:event_jLabel16KeyReleased

    private void recieptTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recieptTableMouseClicked
        if(evt.getClickCount() == 1){
            productTable.clearSelection();
        }
        else if(evt.getClickCount() == 2){
            recieptRowSelect.setVisible(true);
            recieptRowSelect.setLocationRelativeTo(recieptTable);
            int rowId = recieptTable.getSelectedRow();
            
            recieptProduct.setText((String) recieptTable.getValueAt(rowId, 1));
            recieptPrice.setText(String.valueOf(recieptTable.getValueAt(rowId, 2)));
            recieptQuantity.setText(String.valueOf(recieptTable.getValueAt(rowId, 3)));
   
        }
    }//GEN-LAST:event_recieptTableMouseClicked

    private void personalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_personalActionPerformed
        if(personal.isSelected()){
            customerFrame.setVisible(true);
            customerFrame.setLocationRelativeTo(null);
        }
        else{
            nameField.setText("");
            contactField.setText("");
        }
    }//GEN-LAST:event_personalActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        String txt = search.getText().toString();
        TableRowSorter trs = new TableRowSorter(customerTable.getModel());
        customerTable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter("(?i)"+txt));
    }//GEN-LAST:event_searchKeyReleased

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        customerFrame.dispose();
        personal.setSelected(false);
    }//GEN-LAST:event_backActionPerformed

    private void customerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_customerTableMouseClicked

        customer_id = (int)customerTable.getModel().getValueAt(customerTable.getSelectedRow(), 0);
        String  name = (String) customerTable.getModel().getValueAt(customerTable.getSelectedRow(), 1);
        String contact = (String) customerTable.getModel().getValueAt(customerTable.getSelectedRow(), 2);

        if(evt.getClickCount() == 2){

            nameField.setText(name);
            contactField.setText(contact);
            customerFrame.setVisible(false);
        }
    }//GEN-LAST:event_customerTableMouseClicked

    private void customerFrameformWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_customerFrameformWindowClosed

    }//GEN-LAST:event_customerFrameformWindowClosed

    private void customerFrameformWindowDeactivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_customerFrameformWindowDeactivated

    }//GEN-LAST:event_customerFrameformWindowDeactivated

    private void contactFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactFieldActionPerformed

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameFieldActionPerformed

    private void discountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountActionPerformed

    private boolean checkValidity(){
        if(recieptList.isEmpty()){
            return false;
        }
        
        if(!personal.isSelected()){
            return false;
        }
        
        if(commisionTypeCombo.getSelectedIndex() == 0){
            return false;
        }
        
        if(amountPaidValue < 0.0){
            return false;
        }
        
        if(discountValue < 0.0){
            return false;
        }
        
        if(comissionValue < 0.0){
            return false;
        }
        
        if(comment.getText().equals("")){
            return false;
        }
        
        return true;
    }
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if(checkValidity()){
        int orderNo = 0;
        boolean check = true;
        
        while(check){
            orderNo = getOrderNo();
            if(!new OrderDAOImpl().checkOrderNo(orderNo)){
                check = false;
            }
        }
        
        OrderModel orderModel = new OrderModel();
        
        orderModel.setOrderNo(orderNo);
        CustomerModel customerModel = new CustomerModel();
        customerModel.setCustomerId(customer_id);
        orderModel.setCustomer(customerModel);
        orderModel.setAmountPaid(Double.parseDouble(amountPaid.getText()));
        orderModel.setComment(comment.getText());
        orderModel.setDiscount(Double.parseDouble(discount.getText()));
        orderModel.setTime(new Timestamp(System.currentTimeMillis()));
        orderModel.setCommision(Double.parseDouble(commision.getText()));
        orderModel.setCreatedBy(LoginFrame.userModel);
        orderModel.setCreatedDate(new Timestamp(System.currentTimeMillis()));
        orderModel.setModifiedBy(LoginFrame.userModel);
        orderModel.setModifiedDate(new Timestamp(System.currentTimeMillis()));
        CommisionTypeModel typeModel = new CommisionTypeModel();
        typeModel.setCommisionType(commisionTypeCombo.getSelectedItem().toString());
        orderModel.setCommisionType(typeModel);
        
        if(new OrderDAOImpl().addOrder(orderModel) ==  1){
            JOptionPane.showMessageDialog(this, "Order is placed");
            
            int orderId = new OrderDAOImpl().getLastOrderId();
        
        
        
        if(orderId > 0){
            
            System.out.println(orderId);
        
        for(int i=0; i<recieptList.size(); i++){
            OrderDetailsModel orderDetailsModel = new OrderDetailsModel();
            orderDetailsModel.setOrderModel(new OrderDAOImpl().getOrderWithId(orderId));
            orderDetailsModel.setProductModel(new ProductDAOImpl().getProductWithId(recieptList.get(i).getProductId()));
            orderDetailsModel.setQuantity(recieptList.get(i).getQuantity());
            new OrderDetailDAOImpl().addOrderDetail(orderDetailsModel);
        }
            new ProductDAOImpl().updateProductsStock(recieptList);
        }
            
            
        }
       }
       else{
           JOptionPane.showMessageDialog(null,"Fields are Empty");
       }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void amountPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountPaidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountPaidActionPerformed

    private void discountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyReleased
        
        if(discount.getText().equals("")){
            discountValue = 0;
        }
        else{
            discountValue = Double.parseDouble(discount.getText());
             
        }
        calculateRemianingBalance();
        
    }//GEN-LAST:event_discountKeyReleased

    private void amountPaidKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountPaidKeyReleased
        
        if(amountPaid.getText().equals("")){
            amountPaidValue = 0;
        }
        else{
           amountPaidValue = Double.parseDouble(amountPaid.getText());
            
        }
        calculateRemianingBalance();
    }//GEN-LAST:event_amountPaidKeyReleased

    private void commisionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_commisionKeyReleased
        
        if(commision.getText().equals("")){
            comissionValue = 0;
        }
        else{
            comissionValue = Double.parseDouble(commision.getText());
        }  
        
        calculateRemianingBalance();
    }//GEN-LAST:event_commisionKeyReleased

    private void discountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_discountKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_discountKeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
       new HomeFrame1().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void updateQuantityStock(){
        int row = recieptTable.getSelectedRow();
        if(row > -1){
        
        int quan = (int) recieptTable.getValueAt(row, 3);
        RecieptModel reciept = recieptList.get(row);
        
        for(int i=0; i<productTable.getRowCount(); i++){
            if((int)productTable.getValueAt(i, 0) == reciept.getProductId()){
               productTable.setValueAt(quan+(int)productTable.getValueAt(i, 3), i, 3);
               break;
            }
        }
        
        }
    }
    
    private void updateQuantity(){
        int quan = -1;
        RecieptModel reciept = recieptList.get(recieptTable.getSelectedRow());
        if(!recieptQuantity.getText().equals("")){
            
            for(int i =0; i<productTable.getRowCount(); i++){
                if(recieptProduct.getText().equals(productTable.getValueAt(i, 1))){
                   quan = (int) productTable.getValueAt(i, 3);
                   break;
                }  
            }

            int quantity = Integer.parseInt(recieptQuantity.getText());
            int totalQuantity = quan + reciept.getQuantity();
            
            if(quantity > totalQuantity){
                JOptionPane.showMessageDialog(recieptTable, "We have not much stock");
            }else{
            
            
            reciept.setQuantity(quantity);
            
            fillDataIntoProductTable();
            
            for(int i =0; i<productTable.getRowCount(); i++){
                if(reciept.getProductId() == (int)productTable.getValueAt(i, 0)){
                   productTable.setValueAt(totalQuantity-quantity, i, 3);
                   break;
                }  
            }
            
            
            
            fillDataIntoRecieptTable();
            recieptRowSelect.dispose();
            }  
        }
    }
    
    private void fillCommisionTypeCombo(){
        
        CommisionDAOImpl obj = new CommisionDAOImpl();
        
        List<CommisionTypeModel> CommisionTypeList = obj.getAllCommisionType();
        for(CommisionTypeModel commision: CommisionTypeList){
            
           commisionTypeCombo.addItem(commision.getCommisionType());
        }
    
    }
    
    private void fillDataIntoTable(){
        CustomerDAOImpl obj = new CustomerDAOImpl();
        List<CustomerModel> customerList = obj.getAllCustomer();
        
        String[] colNames = {"Customer Id","Name","Contact"};
        DefaultTableModel dtm = new DefaultTableModel(colNames,0){
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
            };
        
        
        for(CustomerModel customer : customerList){
            Object[] row = {customer.getCustomerId(),customer.getName(),customer.getContact()};
            dtm.addRow(row);
        }
        
        customerTable.setModel(dtm);
    }
    
    private int getOrderNo(){
	
    int randomPIN = (int)(Math.random()*9000)+1000;

        return randomPIN;
    }
    
    private void setSerialNo(){
        
        int count = 0;
        for(RecieptModel reciept : recieptList){
            reciept.setId(++count);
        }
        
        --serialNo;
        
        fillDataIntoRecieptTable();
    }
    
    private void removeRecieptTableRow(){
        int row = recieptTable.getSelectedRow();
        
        if(row > -1){
        DefaultTableModel model = (DefaultTableModel) recieptTable.getModel();
        recieptList.remove(row);
        model.removeRow(row);   
        setSerialNo();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountPaid;
    private javax.swing.JButton back;
    private javax.swing.JTextArea comment;
    private javax.swing.JTextField commision;
    private javax.swing.JComboBox<String> commisionTypeCombo;
    private javax.swing.JFormattedTextField contactField;
    private javax.swing.JFrame customerFrame;
    private javax.swing.JTable customerTable;
    private javax.swing.JTextField discount;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField nameField;
    private javax.swing.JCheckBox personal;
    private javax.swing.JSpinner productQuantity;
    private javax.swing.JTable productTable;
    private javax.swing.JTextField recieptPrice;
    private javax.swing.JTextField recieptProduct;
    private javax.swing.JTextField recieptQuantity;
    private javax.swing.JDialog recieptRowSelect;
    private javax.swing.JTable recieptTable;
    private javax.swing.JLabel remaining;
    private javax.swing.JTextField search;
    private javax.swing.JTextField searchProduct;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
}
