/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.pms.frames;

import com.pms.daoimpl.CompanyDAOImpl;
import com.pms.daoimpl.CustomerDAOImpl;
import com.pms.models.CompanyModel;
import com.pms.models.CustomerModel;
import java.awt.Color;
import java.awt.Dimension;
import java.sql.Timestamp;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Asif Ali
 */
public class CustomerFrame extends javax.swing.JFrame {

    /**
     * Creates new form CustomerFrame
     */
    public CustomerFrame() {
        initComponents();
        fillCustomerTable();

        this.setLocationRelativeTo(null);

        

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Update = new javax.swing.JDialog();
        jLabel12 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jcustomerField = new javax.swing.JTextField();
        jcontactfield = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        Delete = new javax.swing.JPopupMenu();
        DeleteRow = new javax.swing.JMenuItem();
        Add = new javax.swing.JDialog();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jcustomercontactfield = new javax.swing.JFormattedTextField();
        jcustomerfield = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        customersearch = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        CustomerTable = new javax.swing.JTable();

        Update.setBackground(new java.awt.Color(255, 255, 255));
        Update.setBounds(new java.awt.Rectangle(0, 0, 340, 210));
        Update.setUndecorated(true);
        Update.setResizable(false);
        Update.getContentPane().setLayout(null);

        jLabel12.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("X");
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel12.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel12MouseClicked(evt);
            }
        });
        Update.getContentPane().add(jLabel12);
        jLabel12.setBounds(300, 0, 30, 40);

        jLabel5.setBackground(new java.awt.Color(11, 18, 29));
        jLabel5.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(140, 198, 62));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Update");
        jLabel5.setOpaque(true);
        Update.getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 340, 40);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(null);

        jcustomerField.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel4.add(jcustomerField);
        jcustomerField.setBounds(130, 40, 156, 30);

        jcontactfield.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jPanel4.add(jcontactfield);
        jcontactfield.setBounds(130, 90, 156, 30);

        jLabel3.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel3.setText("Name");
        jPanel4.add(jLabel3);
        jLabel3.setBounds(33, 40, 80, 30);

        jLabel4.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel4.setText("Contact");
        jPanel4.add(jLabel4);
        jLabel4.setBounds(30, 90, 100, 30);

        jLabel13.setBackground(new java.awt.Color(140, 198, 62));
        jLabel13.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Cancel");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.setOpaque(true);
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel13MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel13);
        jLabel13.setBounds(180, 140, 70, 30);

        jLabel14.setBackground(new java.awt.Color(140, 198, 62));
        jLabel14.setFont(new java.awt.Font("Century Gothic", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Confirm");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel14.setOpaque(true);
        jLabel14.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel14MouseClicked(evt);
            }
        });
        jPanel4.add(jLabel14);
        jLabel14.setBounds(100, 140, 70, 30);

        Update.getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 40, 340, 190);

        DeleteRow.setFont(new java.awt.Font("Century Gothic", 0, 17)); // NOI18N
        DeleteRow.setText("Delete Customer");
        DeleteRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteRowActionPerformed(evt);
            }
        });
        Delete.add(DeleteRow);

        Add.setBackground(new java.awt.Color(255, 255, 255));
        Add.setBounds(new java.awt.Rectangle(0, 0, 352, 300));
        Add.setUndecorated(true);
        Add.getContentPane().setLayout(null);

        jLabel7.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel7.setText("Name");
        Add.getContentPane().add(jLabel7);
        jLabel7.setBounds(18, 73, 80, 40);

        jLabel8.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel8.setText("Contact");
        Add.getContentPane().add(jLabel8);
        jLabel8.setBounds(18, 113, 80, 40);

        jLabel15.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("X");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel15.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel15MouseClicked(evt);
            }
        });
        Add.getContentPane().add(jLabel15);
        jLabel15.setBounds(580, 190, 30, 40);

        jLabel17.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("X");
        jLabel17.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel17.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel17MouseClicked(evt);
            }
        });
        Add.getContentPane().add(jLabel17);
        jLabel17.setBounds(280, 0, 30, 50);

        jLabel16.setBackground(new java.awt.Color(11, 18, 29));
        jLabel16.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(140, 198, 62));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Add Customer");
        jLabel16.setOpaque(true);
        Add.getContentPane().add(jLabel16);
        jLabel16.setBounds(0, 0, 320, 50);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setLayout(null);

        try {
            jcustomercontactfield.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("+92###-#######")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel5.add(jcustomercontactfield);
        jcustomercontactfield.setBounds(100, 80, 170, 30);

        jcustomerfield.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jcustomerfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcustomerfieldActionPerformed(evt);
            }
        });
        jPanel5.add(jcustomerfield);
        jcustomerfield.setBounds(100, 40, 170, 30);

        jLabel22.setBackground(new java.awt.Color(140, 198, 62));
        jLabel22.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Confirm");
        jLabel22.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel22.setOpaque(true);
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel22);
        jLabel22.setBounds(100, 140, 70, 30);

        jLabel21.setBackground(new java.awt.Color(140, 198, 62));
        jLabel21.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Cancel");
        jLabel21.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel21.setOpaque(true);
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });
        jPanel5.add(jLabel21);
        jLabel21.setBounds(180, 140, 70, 30);

        Add.getContentPane().add(jPanel5);
        jPanel5.setBounds(0, 40, 320, 230);

        jMenuItem1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jMenuItem1.setText("Delete");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(239, 239, 239));
        setUndecorated(true);
        setResizable(false);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(11, 18, 29));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel10.setBackground(new java.awt.Color(11, 18, 29));
        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setToolTipText("Go Back");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("X");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(140, 198, 62));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Customer Panel");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(260, 260, 260)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel2.setText("Search Customer");

        customersearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        customersearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customersearchActionPerformed(evt);
            }
        });
        customersearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customersearchKeyReleased(evt);
            }
        });

        jLabel11.setBackground(new java.awt.Color(140, 198, 62));
        jLabel11.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Add Customer");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel11.setOpaque(true);
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel11MouseClicked(evt);
            }
        });

        CustomerTable.setFont(new java.awt.Font("Century Gothic", 0, 17)); // NOI18N
        CustomerTable.setForeground(new java.awt.Color(11, 18, 29));
        CustomerTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        CustomerTable.setRowHeight(20);
        CustomerTable.setSelectionBackground(new java.awt.Color(11, 18, 29));
        CustomerTable.setSelectionForeground(new java.awt.Color(140, 198, 62));
        CustomerTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerTableMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                CustomerTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(CustomerTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(234, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(customersearch, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(207, 207, 207))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(customersearch, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CustomerTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTableMouseClicked
        System.out.println(evt.getClickCount());
        if (evt.getClickCount() == 2) {
            Update.setSize(340, 229);
            Update.setLocationRelativeTo(CustomerTable);
            jcustomerField.setText(CustomerTable.getValueAt(CustomerTable.getSelectedRow(), 1).toString());
            jcontactfield.setText(CustomerTable.getValueAt(CustomerTable.getSelectedRow(), 2).toString());
            Update.setVisible(true);
        }
    }//GEN-LAST:event_CustomerTableMouseClicked

    private void customersearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customersearchKeyReleased
        String customerName = customersearch.getText();
        TableRowSorter tableRowSorter = new TableRowSorter(CustomerTable.getModel());
        CustomerTable.setRowSorter(tableRowSorter);
        tableRowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + customerName));
    }//GEN-LAST:event_customersearchKeyReleased

    private void DeleteRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteRowActionPerformed
        CustomerModel customerModel = new CustomerModel();
        Integer customerId = Integer.parseInt(CustomerTable.getValueAt(CustomerTable.getSelectedRow(), 0).toString());
        customerModel.setCustomerId(customerId);
        customerModel.setActive(false);
        CustomerDAOImpl customerDAOImpl = new CustomerDAOImpl();
        int row = customerDAOImpl.deleteCustomer(customerModel);
        if (row > 0) {
            JOptionPane.showMessageDialog(rootPane, "Deleted");
            fillCustomerTable();

        } else {
            JOptionPane.showMessageDialog(rootPane, "NotDeleted");
        }

    }//GEN-LAST:event_DeleteRowActionPerformed

    private void CustomerTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerTableMouseReleased
        if (evt.isPopupTrigger()) {
            Delete.show(CustomerTable, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_CustomerTableMouseReleased

    private void jcustomerfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcustomerfieldActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_jcustomerfieldActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        CustomerTable.clearSelection();
    }//GEN-LAST:event_formMouseClicked

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        this.dispose();

    }//GEN-LAST:event_jLabel10MouseClicked

    private void jLabel11MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MouseClicked
        // TODO add your handling code here:
        Add.setSize(321, 270);
        Add.setLocationRelativeTo(CustomerTable);
        Add.setVisible(true);
    }//GEN-LAST:event_jLabel11MouseClicked

    private void customersearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customersearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customersearchActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void jLabel12MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel12MouseClicked
        // TODO add your handling code here:
        Update.setVisible(false);
    }//GEN-LAST:event_jLabel12MouseClicked

    private void jLabel13MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MouseClicked
        Update.dispose();

    }//GEN-LAST:event_jLabel13MouseClicked

    private void jLabel14MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel14MouseClicked
        // TODO add your handling code here:
        if (jcustomerField.getText().equals("") || jcontactfield.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Any Field Should Not Be Empty");
        } else if (checkValidityForUpdate()) {
            CustomerModel customerModel = new CustomerModel();
            Integer customerId = Integer.parseInt(CustomerTable.getValueAt(CustomerTable.getSelectedRow(), 0).toString());
            customerModel.setCustomerId(customerId);
            String customerName = jcustomerField.getText();
            customerModel.setName(customerName);
            String contact = jcontactfield.getText();
            customerModel.setContact(contact);
            Timestamp timestamp = new Timestamp(System.currentTimeMillis());
            System.out.println(LoginFrame.userModel);
            customerModel.setModifiedBy(LoginFrame.userModel);
            customerModel.setModifiedDate(timestamp);
            CustomerDAOImpl customerDAOImpl = new CustomerDAOImpl();
            int row = customerDAOImpl.updateCustomer(customerModel);
            if (row > 0) {
                JOptionPane.showMessageDialog(rootPane, "Updated");
                fillCustomerTable();
                Update.setVisible(false);
            } else {
                JOptionPane.showMessageDialog(rootPane, "NotUpdated");
            }
        }
    }//GEN-LAST:event_jLabel14MouseClicked

    private void jLabel15MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel15MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel15MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        // TODO add your handling code here:
        Add.setVisible(false);
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        if (jcustomerfield.getText().equals("") || jcustomercontactfield.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Any Field Should Not Be Empty");
        } else if (checkValidityForInsert()) {
            String customerName = jcustomerfield.getText();
            String contact = jcustomercontactfield.getText();

            CustomerModel customerModel = new CustomerModel();
            customerModel.setName(customerName);
            customerModel.setContact(contact);
            Timestamp timestamp = new Timestamp(System.currentTimeMillis());
            customerModel.setCreatedBy(LoginFrame.userModel);
            customerModel.setCreatedDate(timestamp);
            customerModel.setModifiedBy(LoginFrame.userModel);
            customerModel.setModifiedDate(timestamp);
            customerModel.setActive(true);
            CustomerDAOImpl customerDAOImpl = new CustomerDAOImpl();
            int row = customerDAOImpl.addCustomer(customerModel);
            if (row > 0) {
                JOptionPane.showMessageDialog(rootPane, "Data Inserted");
                fillCustomerTable();
                Add.dispose();
            } else {
                JOptionPane.showMessageDialog(rootPane, "Not Inserted");
            }
        }
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel17MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel17MouseClicked
        // TODO add your handling code here:
        Add.setVisible(false);
    }//GEN-LAST:event_jLabel17MouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustomerFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustomerFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Add;
    private javax.swing.JTable CustomerTable;
    private javax.swing.JPopupMenu Delete;
    private javax.swing.JMenuItem DeleteRow;
    private javax.swing.JDialog Update;
    private javax.swing.JTextField customersearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jcontactfield;
    private javax.swing.JTextField jcustomerField;
    private javax.swing.JFormattedTextField jcustomercontactfield;
    private javax.swing.JTextField jcustomerfield;
    // End of variables declaration//GEN-END:variables

    private void fillCustomerTable() {
      
        DefaultTableModel defaultTableModel = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; //To change body of generated methods, choose Tools | Templates.
            }
        };
        defaultTableModel.addColumn("Id");
        defaultTableModel.addColumn("CompanyName");
        defaultTableModel.addColumn("Contact");

        CustomerDAOImpl customerDAOImpl = new CustomerDAOImpl();
        List<CustomerModel> customer = customerDAOImpl.getAllCustomer();

        for (CustomerModel list : customer) {

            Object[] items = {list.getCustomerId(), list.getName(), list.getContact()};

            defaultTableModel.addRow(items);
        }
        CustomerTable.setModel(defaultTableModel);
        
        DefaultTableCellRenderer headerRenderer = new DefaultTableCellRenderer();
        headerRenderer.setBackground(new Color(11, 18, 29));
        headerRenderer.setForeground(new Color(140, 198, 62));

        for (int i = 0; i < CustomerTable.getModel().getColumnCount(); i++) {
            CustomerTable.getColumnModel().getColumn(i).setHeaderRenderer(headerRenderer);
        }
        CustomerTable.setShowHorizontalLines(true);
        CustomerTable.setShowVerticalLines(true);
        this.getContentPane().setBackground(Color.WHITE);
        jScrollPane1.getViewport().setBackground(Color.WHITE);

    }

    private boolean checkValidityForUpdate() {
        if (!LoginFrame.checkStringValidity(jcustomerField.getText())) {
            JOptionPane.showMessageDialog(this, "Name Field Contains only Alphabet letters");
            return false;
        }

        if (jcontactfield.getText().trim().length() != 14) {
            JOptionPane.showMessageDialog(this, "Invalid Contact");
            return false;
        }
        return true;
    }

    private boolean checkValidityForInsert() {
        if (!LoginFrame.checkStringValidity(jcustomerfield.getText())) {
            JOptionPane.showMessageDialog(this, "Name Field Should Contains only Alphabet letters");
            return false;
        }

        if (jcustomercontactfield.getText().trim().length() != 14) {
            JOptionPane.showMessageDialog(this, "Invalid Contact");
            return false;
        }
        return true;
    }

}
